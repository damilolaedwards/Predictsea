/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers"
import { Provider, TransactionRequest } from "@ethersproject/providers"
import type {
  AttackerContract,
  AttackerContractInterface,
} from "../AttackerContract"

const _abi = [
  {
    inputs: [],
    name: "UID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_predictsea",
    outputs: [
      {
        internalType: "contract Predictsea",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_predictseaContract",
        type: "address",
      },
    ],
    name: "setUpContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFailed",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
]

const _bytecode =
  "0x608060405234801561001057600080fd5b5061030c806100206000396000f3fe60806040526004361061007a5760003560e01c80633ccfd60b146100ae5780635cc99e35146100c357806367b2cd05146100ec578063ab3716fd146100f4578063b8a2c8a41461012c578063ce23727f14610156578063d0e30db014610193578063e6c7c4561461019b578063eff98843146101b157600080fd5b366100a9573460008082825461009091906102b2565b909155505060045460ff166100a7576100a76101c7565b005b600080fd5b3480156100ba57600080fd5b506100a76101c7565b3480156100cf57600080fd5b506100d960025481565b6040519081526020015b60405180910390f35b6100a7610230565b34801561010057600080fd5b50600154610114906001600160a01b031681565b6040516001600160a01b0390911681526020016100e3565b34801561013857600080fd5b506004546101469060ff1681565b60405190151581526020016100e3565b34801561016257600080fd5b506100a7610171366004610284565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6100a761026c565b3480156101a757600080fd5b506100d960005481565b3480156101bd57600080fd5b506100d960035481565b600154600254604051630163fa3b60e11b81526001600160a01b03909216916302c7f476916101fc9160040190815260200190565b600060405180830381600087803b15801561021657600080fd5b505af115801561022a573d6000803e3d6000fd5b50505050565b6004805460ff19166001908117825554600354604051630aaeeaf760e11b8152928301526001600160a01b03169063155dd5ee906024016101fc565b3460008082825461027d91906102b2565b9091555050565b600060208284031215610295578081fd5b81356001600160a01b03811681146102ab578182fd5b9392505050565b600082198211156102d157634e487b7160e01b81526011600452602481fd5b50019056fea2646970667358221220afbb08367c9b89d597873afcf7fc2a3a6d190ccab419b82aa168f3b5124ad5d664736f6c63430008040033"

export class AttackerContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<AttackerContract> {
    return super.deploy(overrides || {}) as Promise<AttackerContract>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): AttackerContract {
    return super.attach(address) as AttackerContract
  }
  connect(signer: Signer): AttackerContract__factory {
    return super.connect(signer) as AttackerContract__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): AttackerContractInterface {
    return new utils.Interface(_abi) as AttackerContractInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): AttackerContract {
    return new Contract(address, _abi, signerOrProvider) as AttackerContract
  }
}
