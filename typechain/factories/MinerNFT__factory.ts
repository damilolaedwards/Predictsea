/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MinerNFT, MinerNFTInterface } from "../MinerNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_initBaseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "lock_status",
        type: "bool",
      },
    ],
    name: "IsLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nominee",
        type: "address",
      },
    ],
    name: "NewOwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseExtension",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "removeWhitelistUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseExtension",
        type: "string",
      },
    ],
    name: "setBaseExtension",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCost",
        type: "uint256",
      },
    ],
    name: "setCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "whitelistUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x600a805460ff60a01b1916905560e0604052600560a081905264173539b7b760d91b60c09081526200003591600d91906200013c565b506104b06080523480156200004957600080fd5b506040516200295b3803806200295b8339810160408190526200006c9162000295565b825183908390620000859060009060208501906200013c565b5080516200009b9060019060208401906200013c565b5050600a80546001600160a01b0319163317905550620000bb81620000c4565b50505062000375565b600a546001600160a01b03163314620001235760405162461bcd60e51b815260206004820152601360248201527f556e617574686f72697a65642061636365737300000000000000000000000000604482015260640160405180910390fd5b80516200013890600c9060208401906200013c565b5050565b8280546200014a9062000322565b90600052602060002090601f0160209004810192826200016e5760008555620001b9565b82601f106200018957805160ff1916838001178555620001b9565b82800160010185558215620001b9579182015b82811115620001b95782518255916020019190600101906200019c565b50620001c7929150620001cb565b5090565b5b80821115620001c75760008155600101620001cc565b600082601f830112620001f3578081fd5b81516001600160401b03808211156200021057620002106200035f565b604051601f8301601f19908116603f011681019082821181831017156200023b576200023b6200035f565b8160405283815260209250868385880101111562000257578485fd5b8491505b838210156200027a57858201830151818301840152908201906200025b565b838211156200028b57848385830101525b9695505050505050565b600080600060608486031215620002aa578283fd5b83516001600160401b0380821115620002c1578485fd5b620002cf87838801620001e2565b94506020860151915080821115620002e5578384fd5b620002f387838801620001e2565b9350604086015191508082111562000309578283fd5b506200031886828701620001e2565b9150509250925092565b600181811c908216806200033757607f821691505b602082108114156200035957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6080516125c362000398600039600081816105970152610e5101526125c36000f3fe6080604052600436106101cf5760003560e01c80636352211e116100f8578063b88d4fde11610090578063b88d4fde1461050f578063c66828621461052f578063c87b56dd14610544578063cf30901214610564578063d5abeb0114610585578063d936547e146105b9578063da3ef23f146105e9578063e985e9c514610609578063f83d08ba1461062957600080fd5b80636352211e146104285780636a627842146104485780636c0360eb1461045b57806370a0823114610470578063880ad0af146104905780638da5cb5b146104a557806395d89b41146104c5578063a22cb465146104da578063a69df4b5146104fa57600080fd5b806330cc7ae01161016b57806330cc7ae0146103135780633ccfd60b1461033357806342842e0e1461033b578063438b63001461035b57806344a0d68a146103885780634a4c560d146103a85780634f6ccce7146103c857806353a47bb7146103e857806355f804b31461040857600080fd5b806301ffc9a7146101d457806306fdde0314610209578063081812fc1461022b578063095ea7b31461025857806313faede61461027a5780631627540c1461029e57806318160ddd146102be57806323b872dd146102d35780632f745c59146102f3575b600080fd5b3480156101e057600080fd5b506101f46101ef36600461215d565b61063e565b60405190151581526020015b60405180910390f35b34801561021557600080fd5b5061021e610669565b6040516102009190612376565b34801561023757600080fd5b5061024b6102463660046121db565b6106fb565b60405161020091906122e1565b34801561026457600080fd5b50610278610273366004612134565b610788565b005b34801561028657600080fd5b50610290600e5481565b604051908152602001610200565b3480156102aa57600080fd5b506102786102b9366004611ffa565b610899565b3480156102ca57600080fd5b50600854610290565b3480156102df57600080fd5b506102786102ee366004612046565b6109cb565b3480156102ff57600080fd5b5061029061030e366004612134565b6109fc565b34801561031f57600080fd5b5061027861032e366004611ffa565b610a92565b610278610add565b34801561034757600080fd5b50610278610356366004612046565b610b2d565b34801561036757600080fd5b5061037b610376366004611ffa565b610b48565b6040516102009190612332565b34801561039457600080fd5b506102786103a33660046121db565b610c06565b3480156103b457600080fd5b506102786103c3366004611ffa565b610c35565b3480156103d457600080fd5b506102906103e33660046121db565b610c83565b3480156103f457600080fd5b50600b5461024b906001600160a01b031681565b34801561041457600080fd5b50610278610423366004612195565b610d24565b34801561043457600080fd5b5061024b6104433660046121db565b610d65565b610278610456366004611ffa565b610ddc565b34801561046757600080fd5b5061021e610fb7565b34801561047c57600080fd5b5061029061048b366004611ffa565b611045565b34801561049c57600080fd5b506102786110cc565b3480156104b157600080fd5b50600a5461024b906001600160a01b031681565b3480156104d157600080fd5b5061021e6111c9565b3480156104e657600080fd5b506102786104f53660046120fa565b6111d8565b34801561050657600080fd5b506102786111e3565b34801561051b57600080fd5b5061027861052a366004612081565b61125a565b34801561053b57600080fd5b5061021e611292565b34801561055057600080fd5b5061021e61055f3660046121db565b61129f565b34801561057057600080fd5b50600a546101f490600160a01b900460ff1681565b34801561059157600080fd5b506102907f000000000000000000000000000000000000000000000000000000000000000081565b3480156105c557600080fd5b506101f46105d4366004611ffa565b600f6020526000908152604090205460ff1681565b3480156105f557600080fd5b50610278610604366004612195565b61136d565b34801561061557600080fd5b506101f4610624366004612014565b6113aa565b34801561063557600080fd5b506102786113d8565b60006001600160e01b0319821663780e9d6360e01b1480610663575061066382611451565b92915050565b606060008054610678906124c8565b80601f01602080910402602001604051908101604052809291908181526020018280546106a4906124c8565b80156106f15780601f106106c6576101008083540402835291602001916106f1565b820191906000526020600020905b8154815290600101906020018083116106d457829003601f168201915b5050505050905090565b6000610706826114a1565b61076c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061079382610d65565b9050806001600160a01b0316836001600160a01b031614156108015760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610763565b336001600160a01b038216148061081d575061081d81336113aa565b61088a5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b6064820152608401610763565b61089483836114be565b505050565b600a546001600160a01b031633146108c35760405162461bcd60e51b8152600401610763906123db565b806001600160a01b0381166109155760405162461bcd60e51b815260206004820152601860248201527743616e6e6f7420737065636966792030206164647265737360401b6044820152606401610763565b600a546001600160a01b03838116911614156109735760405162461bcd60e51b815260206004820181905260248201527f4f776e657220616464726573732063616e2774206265206e6f6d696e617465646044820152606401610763565b600b80546001600160a01b0319166001600160a01b0384169081179091556040517f4b8d098f259d8e813c68a57f09712ee062e342e1c2bc9063f1827c45b4900a99916109bf916122e1565b60405180910390a15050565b6109d5338261152c565b6109f15760405162461bcd60e51b815260040161076390612408565b6108948383836115f6565b6000610a0783611045565b8210610a695760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610763565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03163314610abc5760405162461bcd60e51b8152600401610763906123db565b6001600160a01b03166000908152600f60205260409020805460ff19169055565b600a546001600160a01b03163314610b075760405162461bcd60e51b8152600401610763906123db565b60405133904780156108fc02916000818181858888f19350505050610b2b57600080fd5b565b6108948383836040518060200160405280600081525061125a565b60606000610b5583611045565b905060008167ffffffffffffffff811115610b8057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610ba9578160200160208202803683370190505b50905060005b82811015610bfe57610bc185826109fc565b828281518110610be157634e487b7160e01b600052603260045260246000fd5b602090810291909101015280610bf681612503565b915050610baf565b509392505050565b600a546001600160a01b03163314610c305760405162461bcd60e51b8152600401610763906123db565b600e55565b600a546001600160a01b03163314610c5f5760405162461bcd60e51b8152600401610763906123db565b6001600160a01b03166000908152600f60205260409020805460ff19166001179055565b6000610c8e60085490565b8210610cf15760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610763565b60088281548110610d1257634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600a546001600160a01b03163314610d4e5760405162461bcd60e51b8152600401610763906123db565b8051610d6190600c906020840190611ecf565b5050565b6000818152600260205260408120546001600160a01b0316806106635760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610763565b6000610de760085490565b600a54909150600160a01b900460ff1615610e4f5760405162461bcd60e51b815260206004820152602260248201527f4d696e65724e46543a20436f6e747261637420696e206c6f636b656420737461604482015261746560f01b6064820152608401610763565b7f00000000000000000000000000000000000000000000000000000000000000008110610ebe5760405162461bcd60e51b815260206004820152601c60248201527f4d696e65724e46543a204d617820737570706c792072656163686564000000006044820152606401610763565b600a546001600160a01b03163314610f8857336000908152600f602052604090205460ff16610f2b5760405162461bcd60e51b8152602060048201526019602482015278135a5b995c9391950e88139bdd081dda1a5d195b1a5cdd1959603a1b6044820152606401610763565b600e543414610f885760405162461bcd60e51b8152602060048201526024808201527f4554482073656e74206d7573742062652065786163746c792073656c6c696e676044820152632066656560e01b6064820152608401610763565b610f9c82610f97836001612459565b61179d565b5050336000908152600f60205260409020805460ff19169055565b600c8054610fc4906124c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff0906124c8565b801561103d5780601f106110125761010080835404028352916020019161103d565b820191906000526020600020905b81548152906001019060200180831161102057829003601f168201915b505050505081565b60006001600160a01b0382166110b05760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610763565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b031661111e5760405162461bcd60e51b8152602060048201526017602482015276139bdb5a5b985d1959081bdddb995c881b9bdd081cd95d604a1b6044820152606401610763565b600b546001600160a01b031633146111705760405162461bcd60e51b81526020600482015260156024820152742737ba1030903737b6b4b730ba32b21037bbb732b960591b6044820152606401610763565b600b54600a80546001600160a01b0319166001600160a01b0390921691821790556040517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163916111bf916122e1565b60405180910390a1565b606060018054610678906124c8565b610d613383836117b7565b600a546001600160a01b0316331461120d5760405162461bcd60e51b8152600401610763906123db565b600a805460ff60a01b1916908190556040517f34b31e61a2baf88ffda83bb8d6443ee3dc3bff0ac4bef8f406d7fd16c7d82e23916111bf91600160a01b90910460ff161515815260200190565b611264338361152c565b6112805760405162461bcd60e51b815260040161076390612408565b61128c84848484611882565b50505050565b600d8054610fc4906124c8565b60606112aa826114a1565b61130e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610763565b60006113186118b5565b905060008151116113385760405180602001604052806000815250611366565b80611342846118c4565b600d6040516020016113569392919061221f565b6040516020818303038152906040525b9392505050565b600a546001600160a01b031633146113975760405162461bcd60e51b8152600401610763906123db565b8051610d6190600d906020840190611ecf565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600a546001600160a01b031633146114025760405162461bcd60e51b8152600401610763906123db565b600a805460ff60a01b1916600160a01b908117918290556040517f34b31e61a2baf88ffda83bb8d6443ee3dc3bff0ac4bef8f406d7fd16c7d82e23926111bf92900460ff161515815260200190565b60006001600160e01b031982166380ac58cd60e01b148061148257506001600160e01b03198216635b5e139f60e01b145b8061066357506301ffc9a760e01b6001600160e01b0319831614610663565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906114f382610d65565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611537826114a1565b6115985760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610763565b60006115a383610d65565b9050806001600160a01b0316846001600160a01b031614806115de5750836001600160a01b03166115d3846106fb565b6001600160a01b0316145b806115ee57506115ee81856113aa565b949350505050565b826001600160a01b031661160982610d65565b6001600160a01b03161461166d5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610763565b6001600160a01b0382166116cf5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610763565b6116da8383836119de565b6116e56000826114be565b6001600160a01b038316600090815260036020526040812080546001929061170e908490612485565b90915550506001600160a01b038216600090815260036020526040812080546001929061173c908490612459565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610d61828260405180602001604052806000815250611a96565b816001600160a01b0316836001600160a01b031614156118155760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610763565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61188d8484846115f6565b61189984848484611ac9565b61128c5760405162461bcd60e51b815260040161076390612389565b6060600c8054610678906124c8565b6060816118e85750506040805180820190915260018152600360fc1b602082015290565b8160005b811561191257806118fc81612503565b915061190b9050600a83612471565b91506118ec565b60008167ffffffffffffffff81111561193b57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611965576020820181803683370190505b5090505b84156115ee5761197a600183612485565b9150611987600a8661251e565b611992906030612459565b60f81b8183815181106119b557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506119d7600a86612471565b9450611969565b6001600160a01b038316611a3957611a3481600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611a5c565b816001600160a01b0316836001600160a01b031614611a5c57611a5c8382611bd6565b6001600160a01b038216611a735761089481611c73565b826001600160a01b0316826001600160a01b031614610894576108948282611d4c565b611aa08383611d90565b611aad6000848484611ac9565b6108945760405162461bcd60e51b815260040161076390612389565b60006001600160a01b0384163b15611bcb57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611b0d9033908990889088906004016122f5565b602060405180830381600087803b158015611b2757600080fd5b505af1925050508015611b57575060408051601f3d908101601f19168201909252611b5491810190612179565b60015b611bb1573d808015611b85576040519150601f19603f3d011682016040523d82523d6000602084013e611b8a565b606091505b508051611ba95760405162461bcd60e51b815260040161076390612389565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506115ee565b506001949350505050565b60006001611be384611045565b611bed9190612485565b600083815260076020526040902054909150808214611c40576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611c8590600190612485565b60008381526009602052604081205460088054939450909284908110611cbb57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060088381548110611cea57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611d3057634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000611d5783611045565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611de65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610763565b611def816114a1565b15611e3c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610763565b611e48600083836119de565b6001600160a01b0382166000908152600360205260408120805460019290611e71908490612459565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611edb906124c8565b90600052602060002090601f016020900481019282611efd5760008555611f43565b82601f10611f1657805160ff1916838001178555611f43565b82800160010185558215611f43579182015b82811115611f43578251825591602001919060010190611f28565b50611f4f929150611f53565b5090565b5b80821115611f4f5760008155600101611f54565b600067ffffffffffffffff80841115611f8357611f8361255e565b604051601f8501601f19908116603f01168101908282118183101715611fab57611fab61255e565b81604052809350858152868686011115611fc457600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611ff557600080fd5b919050565b60006020828403121561200b578081fd5b61136682611fde565b60008060408385031215612026578081fd5b61202f83611fde565b915061203d60208401611fde565b90509250929050565b60008060006060848603121561205a578081fd5b61206384611fde565b925061207160208501611fde565b9150604084013590509250925092565b60008060008060808587031215612096578081fd5b61209f85611fde565b93506120ad60208601611fde565b925060408501359150606085013567ffffffffffffffff8111156120cf578182fd5b8501601f810187136120df578182fd5b6120ee87823560208401611f68565b91505092959194509250565b6000806040838503121561210c578182fd5b61211583611fde565b915060208301358015158114612129578182fd5b809150509250929050565b60008060408385031215612146578182fd5b61214f83611fde565b946020939093013593505050565b60006020828403121561216e578081fd5b813561136681612574565b60006020828403121561218a578081fd5b815161136681612574565b6000602082840312156121a6578081fd5b813567ffffffffffffffff8111156121bc578182fd5b8201601f810184136121cc578182fd5b6115ee84823560208401611f68565b6000602082840312156121ec578081fd5b5035919050565b6000815180845261220b81602086016020860161249c565b601f01601f19169290920160200192915050565b6000845160206122328285838a0161249c565b8551918401916122458184848a0161249c565b85549201918390600181811c908083168061226157607f831692505b85831081141561227f57634e487b7160e01b88526022600452602488fd5b80801561229357600181146122a4576122d0565b60ff198516885283880195506122d0565b60008b815260209020895b858110156122c85781548a8201529084019088016122af565b505083880195505b50939b9a5050505050505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612328908301846121f3565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561236a5783518352928401929184019160010161234e565b50909695505050505050565b60208152600061136660208301846121f3565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b602080825260139082015272556e617574686f72697a65642061636365737360681b604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561246c5761246c612532565b500190565b60008261248057612480612548565b500490565b60008282101561249757612497612532565b500390565b60005b838110156124b757818101518382015260200161249f565b8381111561128c5750506000910152565b600181811c908216806124dc57607f821691505b602082108114156124fd57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561251757612517612532565b5060010190565b60008261252d5761252d612548565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461258a57600080fd5b5056fea2646970667358221220ab86d6ab9b30f93da4f91072dec5026b42f76a878795a3490e6afa28b683a5d864736f6c63430008040033";

export class MinerNFT__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _initBaseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinerNFT> {
    return super.deploy(
      _name,
      _symbol,
      _initBaseURI,
      overrides || {}
    ) as Promise<MinerNFT>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _initBaseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _initBaseURI,
      overrides || {}
    );
  }
  attach(address: string): MinerNFT {
    return super.attach(address) as MinerNFT;
  }
  connect(signer: Signer): MinerNFT__factory {
    return super.connect(signer) as MinerNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinerNFTInterface {
    return new utils.Interface(_abi) as MinerNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinerNFT {
    return new Contract(address, _abi, signerOrProvider) as MinerNFT;
  }
}
