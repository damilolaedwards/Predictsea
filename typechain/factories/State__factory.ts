/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers"
import { Provider } from "@ethersproject/providers"
import type { State, StateInterface } from "../State"

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "Balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "BoughtPredictions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "LockedFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPushDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "releaseDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalInstances",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NFT_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "OwnedPredictions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "OwnedValidations",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "UID",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "Performance",
    outputs: [
      {
        internalType: "uint256",
        name: "recentWinRate",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "recentYield",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "recentROI",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "recentProfitablity",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "recentAverageOdds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lifetimeWinRate",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "lifetimeYield",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "lifetimeROI",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "lifetimeProfitability",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "lifetimeAverageOdds",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "UserProfile",
    outputs: [
      {
        internalType: "bytes32",
        name: "username",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "wonCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lostCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPredictions",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalOdds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "grossWinnings",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "UsernameService",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minWonCountForVerification",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minerPercentage",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minerStakingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "miningFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sellerStakingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
]

export class State__factory {
  static readonly abi = _abi
  static createInterface(): StateInterface {
    return new utils.Interface(_abi) as StateInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): State {
    return new Contract(address, _abi, signerOrProvider) as State
  }
}
